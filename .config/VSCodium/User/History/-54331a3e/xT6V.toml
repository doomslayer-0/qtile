
# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

format = """
[┌───────────────────>](bold green)
[│](bold green)$username\
[│](bold green)$hostname\
[│](bold green)$localip\
[│](bold green)$shlvl\
[│](bold green)$singularity\
[│](bold green)$kubernetes\
[│](bold green)$directory\
[│](bold green)$vcsh\
[│](bold green)$fossil_branch\
[│](bold green)${custom.git_server}\
[│](bold green)$git_branch\
[│](bold green)$git_commit\
[│](bold green)$git_state\
[│](bold green)$git_metrics\
[│](bold green)$hg_branch\
[│](bold green)$pijul_channel\
[│](bold green)$docker_context\
[│](bold green)$package\
[│](bold green)$c\
[│](bold green)$cmake\
[│](bold green)$cobol\
[│](bold green)$daml\
[│](bold green)$dart\
[│](bold green)$deno\
[│](bold green)$dotnet\
[│](bold green)$elixir\
[│](bold green)$elm\
[│](bold green)$erlang\
[│](bold green)$fennel\
[│](bold green)$golang\
[│](bold green)$guix_shell\
[│](bold green)$haskell\
[│](bold green)$haxe\
[│](bold green)$helm\
[│](bold green)$java\
[│](bold green)$julia\
[│](bold green)$kotlin\
[│](bold green)$gradle\
[│](bold green)$lua\
[│](bold green)$nim\
[│](bold green)$nodejs\
[│](bold green)$ocaml\
[│](bold green)$opa\
[│](bold green)$perl\
[│](bold green)$php\
[│](bold green)$pulumi\
[│](bold green)$purescript\
[│](bold green)$python\
[│](bold green)$raku\
[│](bold green)$rlang\
[│](bold green)$red\
[│](bold green)$ruby\
[│](bold green)$rust\
[│](bold green)$scala\
[│](bold green)$swift\
[│](bold green)$terraform\
[│](bold green)$vlang\
[│](bold green)$vagrant\
[│](bold green)$zig\
[│](bold green)$buf\
[│](bold green)$nix_shell\
[│](bold green)$conda\
[│](bold green)$meson\
[│](bold green)$spack\
[│](bold green)$memory_usage\
[│](bold green)$aws\
[│](bold green)$gcloud\
[│](bold green)$openstack\
[│](bold green)$azure\
[│](bold green)$env_var\
[│](bold green)$crystal\
[│](bold green)$custom\
[│](bold green)$sudo\
[│](bold green)$cmd_duration\
[│](bold green)$line_break\
[│](bold green)$jobs\
[│](bold green)$battery\
[│](bold green)$time\
[│](bold green)$status\
[│](bold green)$os\
[│](bold green)$container\
[│](bold green)$shell\
[│](bold green)$character
[└─>](bold green) """

################################################################################
## Custom Commands
################################################################################
[custom.git_server]
#disabled = true
description = "Display symbol for remote Git server"
command = """
GIT_REMOTE=$(command git ls-remote --get-url 2> /dev/null)
if [[ "$GIT_REMOTE" =~ "github" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "gitlab" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "bitbucket" ]]; then
    GIT_REMOTE_SYMBOL=" "
elif [[ "$GIT_REMOTE" =~ "git" ]]; then
    GIT_REMOTE_SYMBOL=" "
else
    GIT_REMOTE_SYMBOL=" "
fi
echo "$GIT_REMOTE_SYMBOL "
"""
when = 'git rev-parse --is-inside-work-tree 2> /dev/null'
style = "bold blue"
format = '[$output]($style) '

[custom.git_scope]
disabled = true
command = '''
printf "%s (%s)" \
  "$(if [ -n "$GIT_AUTHOR_EMAIL" ]; then echo "$GIT_AUTHOR_EMAIL"; else git config user.email; fi)" \
  "$(if [ -n "$GIT_AUTHOR_NAME" ]; then echo "$GIT_AUTHOR_NAME"; else git config user.name; fi)"
'''
description = 'The currently configured Git user.{email,name}'
format = '$output '
style = 'blue bold'
when = 'git rev-parse --is-inside-work-tree'

[custom.git_last_commit]
disabled = true
description = "Display last commit hash and message"
command = "git show -s --format='%h \"%s\"'"
when = 'git rev-parse --is-inside-work-tree 2> /dev/null'
style = "bright-yellow bold"
format = "[$output]($style) "

[custom.ssh_no_keys]
disabled = true
description = "SSH missing keys"
when = "ssh-add -l | grep -q 'no identities'"
command = "echo 🚫"
format = '\[$symbol[$output]($style)\]'
shell = ["bash", "--noprofile", "--norc"]
symbol = "🔑"
style = "bold fg:red"

[custom.ssh_keys]
disabled = true
description = "SSH key count"
when = "ssh-add -l | grep -v -q 'no identities'"
command = "ssh-add -l | grep -v 'no identities' | wc -l"
format = '\[$symbol[$output]($style)\]'
shell = ["bash", "--noprofile", "--norc"]
symbol = "🔑"
style = "bold fg:green"

################################################################################
## Shell
################################################################################
[battery]
full_symbol = "🔋"
charging_symbol = "🔌"
discharging_symbol = "⚡"

[[battery.display]]
threshold = 30
style = "bold red"

[cmd_duration]
min_time = 10_000  # Show command duration over 10,000 milliseconds (=10 sec)
format = '\[[⏱ $duration]($style)\]'
style = 'yellow'

[memory_usage]
format = '\[$symbol[${ram}( | ${swap})]($style)\]'
threshold = 70
style = "bold dimmed white"
disabled = false

[time]
time_format = "%T"
format = "🕙 $time($style) "
style = "bright-white"
disabled = true

[username]
format = '\[[$user]($style)\]'
style_user = "bold dimmed blue"
show_always = false

[hostname]
ssh_only = false
format = "<[$hostname]($style)>"
trim_at = "-"
style = "bold dimmed white"
disabled = true

[directory]
truncation_length = 5
format = "[$path]($style)[$lock_symbol]($lock_style) "

[directory.substitutions]
"Documents" = " "
"Downloads" = " "
"Music" = " "
"Pictures" = " "

################################################################################
## GIT
################################################################################
[git_branch]
format = '\[[$symbol$branch]($style)\]'
symbol = '  -> '
style = "bold yellow"

[git_state]
format = '\[[\($state( $progress_current of $progress_total)\)]($style)\]'

[git_status]
conflicted = "⚔️ "
ahead = "💨${count} "
behind = "🐢${count} "
diverged = "🔱 💨${ahead_count} 🐢${behind_count} "
untracked = "🛤️ ${count} "
stashed = "📦 "
modified = "📝${count} "
staged = "🗃️ ${count} "
renamed = "📛${count} "
deleted = "🗑️ ${count} "
style = "bright-white"
format = '\[ $all_status$ahead_behind\]'

[git_commit]
commit_hash_length = 8
style = "bold white"
tag_symbol = '🔖 '
disabled = false

################################################################################
## Languages & Tools
################################################################################
[aws]
format = '\[[$symbol($profile)(\($region\))(\[$duration\])]($style)\]'
symbol = '󰅟 '
style = "yellow"

[bun]
format = '\[[$symbol($version)]($style)\]'

[c]
format = '\[[$symbol($version(-$name))]($style)\]'

[cmake]
format = '\[[$symbol($version)]($style)\]'

[cobol]
format = '\[[$symbol($version)]($style)\]'

[conda]
format = '\[[$symbol$environment]($style)\]'

[crystal]
format = '\[[$symbol($version)]($style)\]'

[daml]
format = '\[[$symbol($version)]($style)\]'

[dart]
format = '\[[$symbol($version)]($style)\]'

[deno]
format = '\[[$symbol($version)]($style)\]'

[docker_context]
format = '\[[$symbol$context]($style)\]'

[dotnet]
format = '\[[$symbol($version)(🎯 $tfm)]($style)\]'

[elixir]
format = '\[[$symbol($version \(OTP $otp_version\))]($style)\]'

[elm]
format = '\[[$symbol($version)]($style)\]'

[erlang]
format = '\[[$symbol($version)]($style)\]'

[fennel]
format = '\[[$symbol($version)]($style)\]'

[fossil_branch]
format = '\[[$symbol$branch]($style)\]'

[gcloud]
format = '\[[$symbol$account(@$domain)(\($region\))]($style)\]'

[golang]
format = '\[[$symbol($version)]($style)\]'

[gradle]
format = '\[[$symbol($version)]($style)\]'

[guix_shell]
format = '\[[$symbol]($style)\]'

[haskell]
format = '\[[$symbol($version)]($style)\]'

[haxe]
format = '\[[$symbol($version)]($style)\]'

[helm]
format = '\[[$symbol($version)]($style)\]'

[hg_branch]
format = '\[[$symbol$branch]($style)\]'

[java]
format = '\[[$symbol($version)]($style)\]'

[julia]
format = '\[[$symbol($version)]($style)\]'

[kotlin]
format = '\[[$symbol($version)]($style)\]'

[kubernetes]
format = '\[[$symbol$context( \($namespace\))]($style)\]'

[lua]
format = '\[[$symbol($version)]($style)\]'

[meson]
format = '\[[$symbol$project]($style)\]'

[nim]
format = '\[[$symbol($version)]($style)\]'

[nix_shell]
format = '\[[$symbol$state( \($name\))]($style)\]'

[nodejs]
format = '\[[$symbol($version)]($style)\]'

[ocaml]
format = '\[[$symbol($version)(\($switch_indicator$switch_name\))]($style)\]'

[opa]
format = '\[[$symbol($version)]($style)\]'

[openstack]
format = '\[[$symbol$cloud(\($project\))]($style)\]'

[os]
format = '\[[$symbol]($style)\]'

[package]
format = '\[[$symbol$version]($style)\]'

[perl]
format = '\[[$symbol($version)]($style)\]'

[php]
format = '\[[$symbol($version)]($style)\]'

[pijul_channel]
format = '\[[$symbol$channel]($style)\]'

[pulumi]
format = '\[[$symbol$stack]($style)\]'

[purescript]
format = '\[[$symbol($version)]($style)\]'

[python]
format = '\[[${symbol}${pyenv_prefix}(${version})(\($virtualenv\))]($style)\]'
style = "bold green"

[raku]
format = '\[[$symbol($version-$vm_version)]($style)\]'

[red]
format = '\[[$symbol($version)]($style)\]'

[ruby]
format = '\[[$symbol($version)]($style)\]'

[rust]
format = '\[[$symbol($version)]($style)\]'
style = "bold green"

[scala]
format = '\[[$symbol($version)]($style)\]'

[spack]
format = '\[[$symbol$environment]($style)\]'

[sudo]
format = '\[[as $symbol]\]'

[swift]
format = '\[[$symbol($version)]($style)\]'

[terraform]
format = '\[[$symbol$workspace]($style)\]'

[vagrant]
format = '\[[$symbol($version)]($style)\]'

[vlang]
format = '\[[$symbol($version)]($style)\]'

[zig]
format = '\[[$symbol($version)]($style)\]'
